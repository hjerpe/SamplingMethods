randu?
?randu
n
?sample
random_number
random_number
?sample.int
ranom_number
random_number
random_number
random_number
random_number
random_
random_number
S
c(1,1,5)
c(1:5)
S
?hist
X
random_numbers
S
?cumsum
vec_N
S
means
sum_of_uniformly_rv
sum_of_uniformly_rv()
sum_of_uniformly_rv()
?apply
c(1:100)
?apply
S_outcomes
?dnorm
c(-6,0.1,6)
c(-6:0.1:6)
linspace
linspace
linspace
?linspace
lin.spa
linspace(1,1,1)
seq(-6, 6, 100)
x
x
x
mean_S_samples
n_rvs
mean_S_samples
23
mean_S_samples(100)
mean_S_samples
mean_S_samples[1]
mean_S_samples[1](2000)
mean_S_samples[1]$2000
mean_S_samples[1](2000)
mean_S_samples[1]
q = mean_S_samples[1]
q(4)
qs = mean_S_samples[1]
qs
qs(4)
Z
CLT
q()
n
Z
mean_S_samples
mean_S_samples[1]
mean_S_samples[1][1]
mean_S_samples[1][1](2)
mean_S_samples[1[1]]
mean_S_samples[1[1]](4)
mean_S_samples[1](4)
mean_S_samples[1]
?hist
length(n_rvs)
n_samples
2
??samples_Z
Z_outcomes
size
dim
dim(Z_outcomes)
length(Z_outcomes)
Z_outcomes[0]
Z_outcomes[1]
Z_outcomes[2]
typeof(Z_outcomes)
typeof(Z_outcomes[0])
install.packages(roxygen)
install.packages(roxygen)
install.packages
install.packages('roxygen')
install.packages('functional')
truehist
?hist
warin
warning()
warnings()
warnings()
string(5)
str(5)
typeof(c(1,4))
typeof(c(1,4,5))
x_labels
indices
indices
t
typeof(t)
t[1]
t[2]
t[3]

. + 
)
lapply(indices, function(x) hist(Z_outcomes[[x]], prob=TRUE, xlab=x_labels[[x]]) +
       lines(x_range[[x]], dnorm(x = x_range[[x]], mean=0, sd=sqrt(sigma2)),
       col='blue'))
x_range
length(x_range)
length(x_range)
lenght(x_range)
length(x_range)
Z_outcomes
length(Z_outcomes)
Z_outcomes
length(Z_outcomes)
?paste
n
invisible(lapply(indices, function(x) my_plot(z_outcomes[[x]], x_labels[[x]])))
